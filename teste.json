{
  "name": "room name",
  "players": [
    {
      "player 1": {
        "penalties": 5,
        "score": 10,
        "wins:": 2,
        "img":""
      }
    },
    {
      "player 2": {
        "penalties": 5,
        "score": 10,
        "wins:": 2
      }
    },
    {
      "player 3": {
        "penalties": 5,
        "score": 10,
        "wins:": 2
      }
    },
    {
      "player 4": {
        "penalties": 5,
        "score": 10,
        "wins:": 2
      }
    }
  ],
  "genreId": "rock music",
  "round": 1,
  "maxPlayers": 5,
  "currentPlayers":4,
  "playlistId": "oiyguiuihgvhjkf",
  "roundDuration":60000,
  "roundInterval":10000
}


// SCHEMA MONGOdb

"id": "ObjectId(12342324532)" 
"img": [
  "img1",
  "img2",
  "img3",
  "img4"
]

"genre": {
  "id": "ObjectId(12342324532)",
  "name": "rock",
},"genre": {
  "id": "ObjectId(12342324532)",
  "name": "blues",
},"genre": {
  "id": "ObjectId(12342324532)",
  "name": "folk",
},

{
  "genre": {
    "id": "ObjectId(12342324532)",
    "name": "rock",
  },
  "playlists": ["playlist1", "playlist2", "playlist3", "playlist4"]
},
{
  "genre": {
    "id": "ObjectId(12342324532)",
    "name": "rock",
  },
  "playlists": ["playlist1", "playlist2", "playlist3", "playlist4"]
}

create interfaces and schemas for mongoose with typescript based in this json model

// Image document
{"id": "ObjectId(12342324532)" 
"img": [
  "img1",
  "img2",
  "img3",
  "img4"
]}

//Genre document 
"genre": {
  "id": "ObjectId(12342324532)",
  "name": "rock",
},"genre": {
  "id": "ObjectId(12342324532)",
  "name": "blues",
},"genre": {
  "id": "ObjectId(12342324532)",
  "name": "folk",
},

// Playlist document
{
  "genre": {
    "id": "ObjectId(12342324532)",
    "name": "rock",
  },
  "playlistsUrl": ["playlist1", "playlist2", "playlist3", "playlist4"]
},
{
  "genre": {
    "id": "ObjectId(12342324532)",
    "name": "rock",
  },
  "playlistsUrl": ["playlist1", "playlist2", "playlist3", "playlist4"]
}